<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>EasyExcel 的使用</title>
    <url>/2022/11/30/EasyExcel%E8%AF%BB%E5%8F%96%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="EasyExcel"><a href="#EasyExcel" class="headerlink" title="EasyExcel"></a>EasyExcel</h1><p>官方文档： <a class="link"   href="https://easyexcel.opensource.alibaba.com/docs/current/" >https://easyexcel.opensource.alibaba.com/docs/current/<i class="fas fa-external-link-alt"></i></a> </p>
<p>两种读对象的方式：</p>
<ol>
<li>确定表头：建立对象，和表头形成映射关系</li>
<li>不确定表头：每一行数据映射为 Map&lt;String, Object&gt;</li>
</ol>
<p>两种读取模式：</p>
<ol>
<li>监听器：先创建监听器、在读取文件时绑定监听器。单独抽离处理逻辑，代码清晰易于维护；一条一条处理，适用于数据量大的场景。</li>
<li>同步读：无需创建监听器，一次性获取完整数据。方便简单，但是数据量大时会有等待时常，也可能内存溢出。</li>
</ol>
<p>添加EasyExcel步骤：</p>
<h2 id="1-添加依赖"><a href="#1-添加依赖" class="headerlink" title="1.添加依赖"></a>1.添加依赖</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!-- https:<span class="comment">//mvnrepository.com/artifact/com.alibaba/easyexcel --&gt;</span></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;easyexcel&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">3.1</span><span class="number">.0</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></div>

<h2 id="2-定义读的对象"><a href="#2-定义读的对象" class="headerlink" title="2.定义读的对象"></a>2.定义读的对象</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">XingQiuTableUserInfo</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;成员编号&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String planetCode;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户昵称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;成员昵称&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="同步读取数据的方式"><a href="#同步读取数据的方式" class="headerlink" title="同步读取数据的方式"></a>同步读取数据的方式</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 同步读取数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">synchronousRead</span><span class="params">(String fileName)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> <span class="string">&quot;E:\\yupi\\星球项目\\yupao-	 backend\\src\\main\\resources\\testExcle.xlsx&quot;</span>;</span><br><span class="line">    <span class="comment">// 这里 需要指定读用哪个class去读，然后读取第一个sheet 同步读取会自动finish</span></span><br><span class="line">    List&lt;XingQiuTableUserInfo&gt; totalDataList =</span><br><span class="line">         					    EasyExcel.read(fileName).head(XingQiuTableUserInfo.class).sheet().doReadSync();</span><br><span class="line">    <span class="keyword">for</span> (XingQiuTableUserInfo xingQiuTableUserInfo : totalDataList) &#123;</span><br><span class="line">        System.out.println(xingQiuTableUserInfo);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="（1）定义一个主类启动即可"><a href="#（1）定义一个主类启动即可" class="headerlink" title="（1）定义一个主类启动即可"></a>（1）定义一个主类启动即可</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    synchronousRead(fileName);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="采用监听器的方式读取数据"><a href="#采用监听器的方式读取数据" class="headerlink" title="采用监听器的方式读取数据"></a>采用监听器的方式读取数据</h2><h3 id="（1）定义一个监听器-tableListener-类"><a href="#（1）定义一个监听器-tableListener-类" class="headerlink" title="（1）定义一个监听器 tableListener 类"></a>（1）定义一个监听器 tableListener 类</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 有个很重要的点 XingQiuTableUserInfoListener 不能被spring管理，要每次读取excel都要new,然后里面用到spring可以构造方法传进去</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TableListener</span> <span class="keyword">implements</span> <span class="title class_">ReadListener</span>&lt;XingQiuTableUserInfo&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 这个每一条数据解析都会来调用</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data    one row value. Is is same as &#123;<span class="doctag">@link</span> AnalysisContext#readRowHolder()&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">invoke</span><span class="params">(XingQiuTableUserInfo data, AnalysisContext context)</span> &#123;</span><br><span class="line">        System.out.println(data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 所有数据解析完成了 都会来调用</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doAfterAllAnalysed</span><span class="params">(AnalysisContext context)</span> &#123;</span><br><span class="line">        <span class="comment">// 这里也要保存数据，确保最后遗留的数据也存储到数据库</span></span><br><span class="line">        System.out.println(<span class="string">&quot;已解析完成&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="2-封装为方法-readByListener"><a href="#2-封装为方法-readByListener" class="headerlink" title="(2)封装为方法 readByListener"></a>(2)封装为方法 readByListener</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器读取数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fileName</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">readByListener</span><span class="params">(String fileName)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> <span class="string">&quot;E:\\yupi\\星球项目\\yupao-backend\\src\\main\\resources\\testExcle.xlsx&quot;</span>;</span><br><span class="line">    EasyExcel.read(fileName, XingQiuTableUserInfo.class, <span class="keyword">new</span> <span class="title class_">TableListener</span>()).sheet().doRead();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="3-定义一个主类启动即可"><a href="#3-定义一个主类启动即可" class="headerlink" title="(3)定义一个主类启动即可"></a>(3)定义一个主类启动即可</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    readByListener(fileName);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>alibaba</tag>
      </tags>
  </entry>
  <entry>
    <title>解决跨域问题</title>
    <url>/2022/11/30/%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="解决跨域问题"><a href="#解决跨域问题" class="headerlink" title="解决跨域问题"></a>解决跨域问题</h1><h2 id="后端配置固定地址"><a href="#后端配置固定地址" class="headerlink" title="后端配置固定地址"></a>后端配置固定地址</h2><p>在项目中新建 config 目录，配置一个类，实现 WebMvcConfigurer 接口，具体代码如下</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.CorsRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebMvcConfg</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        <span class="comment">//设置允许跨域的路径</span></span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                <span class="comment">//设置允许跨域请求的域名</span></span><br><span class="line">               .allowedOrigins(<span class="string">&quot;http://127.0.0.1:9527&quot;</span>,<span class="string">&quot;http://127.0.0.1:8000&quot;</span>)</span><br><span class="line">                <span class="comment">//是否允许证书 不再默认开启</span></span><br><span class="line">                .allowCredentials(<span class="literal">true</span>)</span><br><span class="line">                <span class="comment">//设置允许的方法</span></span><br><span class="line">                .allowedMethods(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                <span class="comment">//跨域允许时间</span></span><br><span class="line">                .maxAge(<span class="number">3600</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>如果 Credentials 为 true 时,<strong>Access-Control-Allow-Origin</strong> 不能是 * ，可配置为具体的 ip </p>
]]></content>
  </entry>
</search>
